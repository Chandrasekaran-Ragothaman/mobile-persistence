<?xml version="1.0" encoding="windows-1252" ?>
<!--Ant buildfile generated by Oracle JDeveloper-->

<!--Generated May 10, 2013 10:26:46 AM-->
<project xmlns="antlib:org.apache.tools.ant" name="Runtime" default="all" basedir=".">

  <property file="build.properties"/>

  <echoproperties/>

  <path id="classpath">
      <fileset dir="${install.dir}/jdeveloper/jdev/extensions/oracle.maf/lib">
        <include name="**/*.jar"/>
      </fileset>
  </path>

  <target name="init" depends="clean">
    <tstamp/>
    <mkdir dir="${runtime.output.dir}"/>
    <mkdir dir="${runtime.javadoc.dir}"/>
    <mkdir dir="${runtime.deploy.dir}"/>
    
     <!-- create the new version file -->
     <touch file="${runtime.output.dir}/${version.number}"/>

     <!-- Replace the version information in the Version.java file -->
    <replaceregexp file="${runtime.source.dir}/oracle/ateam/sample/mobile/Version.java"
                   match="VERSION(\s*)=(.*);"
                   replace="VERSION = &quot;${version.number}&quot;;"/>
  </target>


  <target name="clean" description="Clean the project">
    <delete includeemptydirs="true" quiet="true">
      <fileset dir="${runtime.output.dir}" includes="**/*"/>
      <fileset dir="${runtime.javadoc.dir}" includes="**/*"/>
      <fileset dir="${runtime.deploy.dir}" includes="**/*"/>
    </delete>
  </target>

  <target name="compile" description="Compile Java source files" depends="init">
    <javac destdir="${runtime.output.dir}" classpathref="classpath" debug="${javac.debug}" nowarn="${javac.nowarn}"
           deprecation="${javac.deprecation}" encoding="Cp1252" source="1.8" target="1.8">
      <src path="${runtime.source.dir}"/>
    </javac>
  </target>
  <target name="copy" description="Copy files to output directory" depends="init">
    <patternset id="copy.patterns">
      <include name="**/*.cpx"/>
      <include name="**/*.db"/>
      <include name="**/*.dcx"/>
      <include name="**/*.ejx"/>
      <include name="**/*.gif"/>
      <include name="**/*.ini"/>
      <include name="**/*.jpeg"/>
      <include name="**/*.jpg"/>
      <include name="**/*.png"/>
      <include name="**/*.properties"/>
      <include name="**/*.sql"/>
      <include name="**/*.sva"/>
      <include name="**/*.tag"/>
      <include name="**/*.tld"/>
      <include name="**/*.wsdl"/>
      <include name="**/*.xcfg"/>
      <include name="**/*.xlf"/>
      <include name="**/*.xml"/>
      <include name="**/*.xsd"/>
      <include name="**/*.xsl"/>
    </patternset>
    <copy todir="${runtime.output.dir}">
      <fileset dir="${runtime.source.dir}">
        <patternset refid="copy.patterns"/>
      </fileset>
    </copy>
  </target>

   <target name="runtimejar" depends="compile, copy">
     <!-- create the jheadstart runtime jar -->
     <jar destfile="${runtime.deploy.jar}">
       <!-- put the version information in the manifest file as well -->
       <manifest>
         <attribute name="ATeam-Mobile-Persistence-Accelerator-Version" value="${version.number}"/>
       </manifest>
       <fileset dir="${runtime.output.dir}" />
     </jar>
     <delete dir="${runtime.output.dir}"/>
   </target>

   <target name="sourcezipfile" depends="init">
     <!-- create the output directory if it doesn't exist-->
     <mkdir dir="${runtime.deploy.dir}"/>
     <!-- zip up all the sources and place them with the jarfile in the deployment directory -->
     <zip destfile="${runtime.deploy.src.zip}" basedir="${runtime.source.dir}">
       <include name="**/*.properties"/>
       <include name="**/*.java"/>
       <include name="**/*.xml"/>
       <include name="readme.txt"/>
     </zip>
   </target>

   <target name="javadoc" depends="init">
      <!-- Recreate javadoc directory to prevent html files of renamed
           classes/packages to linger around -->
      <delete dir="${runtime.javadoc.dir}"/>
      <mkdir dir="${runtime.javadoc.dir}"/>
      <!--Create Javadoc-->
      <javadoc packagenames="oracle.ateam.sample.*" sourcepath="${runtime.source.dir}"
               classpathref="classpath"
               destdir="${runtime.javadoc.dir}" version="false" author="false"/>
      <!-- zip the javadoc, and put it in the deployment directory -->
     <!-- create the deploy directory if it doesn't exist-->
     <mkdir dir="${runtime.deploy.dir}"/>
      <zip destfile="${runtime.javadoc.zip}" basedir="${runtime.javadoc.dir}"/>
   </target>

  <target name="stage" description="Deploy JDeveloper profiles" depends="runtimejar,sourcezipfile, javadoc">
  </target>

  <target name="deploy" depends="stage">
    <copy todir="${extensions.dir}">
      <fileset dir="${runtime.deploy.dir}">
         <include name="*.jar"/>
         <include name="*.zip"/>
      </fileset>
    </copy>
  </target>

</project>
